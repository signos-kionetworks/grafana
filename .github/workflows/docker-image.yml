name: Docker Image CI
'on':
  push:
    branches:
      - main
      - desarrollo
  pull_request:
    #branches:
      #- main
      #- desarrollo
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: temurin
          cache: maven
      - name: Build with Maven
        run: mvn clean install -DskipTests --file pom.xml
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: grafana.war
          path: grafana-web/target/*.war
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Update version
        run: >-
          mvn -B versions:set -DnewVersion=v${{github.run_number}}
          -DgenerateBackupPoms=false
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWD }}
      - name: Download artifact
        uses: actions/download-artifact@v2
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: 'jgalindol/grafana:latest'
  deploy-to-server:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Obteniendo ambiente a deployar
        run: >
          echo "SSH_TARGET=/data/vol/containers/grafana/prod/" >> $GITHUB_ENV
        if: '${{ github.ref == ''refs/heads/main'' }}'
      - name: Obteniendo ambiente a deployar
        run: >
          echo "SSH_TARGET=/data/vol/containers/grafana/dev/" >> $GITHUB_ENV
        if: '${{ github.ref == ''refs/heads/desarrollo'' }}'
      - name: Ambiente a deployar
        run: |
          echo Branch usado   : ${{ github.ref }}
          echo Ruta a deployar: ${{ env.SSH_TARGET }}
      - name: Realizando checkout del proyecto
        uses: actions/checkout@v2
      - name: Mostrando contenido del proyecto
        run: |
          ls ${{ github.workspace }}
      - name: Reiniciar docker-compose en servidor remoto
        uses: fifsky/ssh-action@master
        env:
          DOCKER_COMPOSE_CMD: /usr/local/bin/docker-compose
        with:
          command: >
            docker-compose -f ${{ env.SSH_TARGET }}/docker-compose.yml down &&
            docker-compose -f ${{ env.SSH_TARGET }}/docker-compose.yml up -d
          host: '${{ secrets.SSH_HOST }}'
          user: '${{ secrets.SSH_USER }}'
          pass: '${{ secrets.SSH_PASSWD }}'
          port: '${{ secrets.SSH_PORT }}'
